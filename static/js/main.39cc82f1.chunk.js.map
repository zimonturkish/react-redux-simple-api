{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"iUAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCCUEC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,uDAMbC,EAAY,SAAAC,GAAE,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEACNC,EAAgBC,IAAhB,iBAA8BM,IADxB,OACvBL,EADuB,OAE7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAFpB,2CAAJ,uDChBrBG,E,iLACM,IACAC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAIE,yBAAKG,UAAU,UAAUH,EAAKI,MAH5B,S,GALYC,IAAMC,WAgBhBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOW,EAASG,aAGhDL,CAAyBR,GCdlCc,E,4LAEFZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKd,UAAU,OAAOe,IAAKD,EAAKnB,IAC9B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEX,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQjC,OAAO,yBAAKT,UAAU,2BAA2BF,KAAKoB,kB,GAvBnChB,IAAMC,WA+BdC,eAJS,SAAAC,GACtB,MAAO,CAAEO,MAAOP,EAAMO,SAGgB,CAAED,mBFjCR,yDAAM,WAAOzB,EAAUiC,GAAjB,SAAAhC,EAAA,sEAChCD,EAASD,KADuB,OAGtCmC,IAAEC,MAAMF,IAAWP,OAChBC,IAAI,UACJS,OACAC,SAAQ,SAAA5B,GAAE,OAAIT,EAASQ,EAAUC,OACjC6B,QAPmC,2CAAN,0DEiCnBpB,CAAiDM,GCzBjDe,EARH,WACV,OACE,yBAAKzB,UAAU,gBACb,kBAAC,EAAD,Q,QCFS0B,cAAgB,CAC7Bd,MCLa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIsB,EAAW,uCACrC,OAAQA,EAAOpC,MACb,IAAK,cACH,OAAOoC,EAAOnC,QAChB,QACE,OAAOa,IDCXE,MENa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIsB,EAAW,uCACrC,OAAQA,EAAOpC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWc,GAAX,CAAkBsB,EAAOnC,UAC3B,QACE,OAAOa,MCIPuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.39cc82f1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://jsonplaceholder.typicode.com\"\r\n});\r\n","import _ from \"lodash\";\r\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n\r\n  _.chain(getState().posts)\r\n    .map(\"userId\")\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await jsonPlaceholder.get(\"/posts\");\r\n\r\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await jsonPlaceholder.get(`/users/${id}`);\r\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n\r\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\r\n\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\r\n//   dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPostsAndUsers } from \"../actions\";\r\nimport UserHeader from \"./UserHeader\";\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.map(post => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\" />\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\r\n","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer\r\n});\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_USER\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}